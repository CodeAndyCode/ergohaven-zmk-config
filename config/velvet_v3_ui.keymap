#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <10>;
            hold-while-undecided;
        };

        ltc: ltc {
            compatible = "zmk,behavior-hold-tap";
            label = "LTC";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
        };

        tog_on: tog_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_ON";
            #binding-cells = <1>;
        };

        tog_off: tog_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        bt_mac_mod: bt_mac_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "BT_MAC_MOD";
            bindings = <&mod_mac>, <&bt_mac>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        bt_win_mod: bt_win_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "BT_WIN_MOD";
            bindings = <&mod_win>, <&bt_win>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mac_ru_dotcomma: mac_ru_dotcomma {
            compatible = "zmk,behavior-mod-morph";
            label = "MAC_RU_DOTCOMMA";
            bindings = <&kp LS(NUMBER_7)>, <&kp LS(NUMBER_6)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 41>;
        };

        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 2 3 5 4 17 16 15 14 13 25 26 27 28 29 36 0 12 24 37 40 39 38 13 14 15 16 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to-en-mac {
            bindings = <&to_en_mac>;
            key-positions = <44 42>;
            layers = <0 1 2 3 5 4 6>;
        };

        to-ru-mac {
            bindings = <&to_ru_mac>;
            key-positions = <45 42>;
            layers = <0 1 2 3 5 4 6>;
        };

        to-en-win {
            bindings = <&to_en_win>;
            key-positions = <44 42>;
            layers = <7 8 9 10 11 13 12>;
        };

        to-ru-win {
            bindings = <&to_ru_win>;
            key-positions = <42 45>;
            layers = <7 8 9 10 11 12 13>;
        };

        as {
            bindings = <&kp TILDE>;
            key-positions = <13 14>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        we {
            bindings = <&kp LT>;
            key-positions = <2 3>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        sd {
            bindings = <&kp GRAVE>;
            key-positions = <14 15>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        xc {
            bindings = <&kp PIPE>;
            key-positions = <26 27>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        er {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        df {
            bindings = <&kp RU_LEFT_PARENTHESIS>;
            key-positions = <16 15>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        cv {
            bindings = <&kp LBRC>;
            key-positions = <27 28>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        rt {
            bindings = <&none>;
            key-positions = <5 4>;
        };

        fg {
            bindings = <&none>;
            key-positions = <17 16>;
        };

        vb {
            bindings = <&none>;
            key-positions = <29 28>;
        };

        ll {
            bindings = <&kp BACKSLASH>;
            key-positions = <22 21>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        io {
            bindings = <&kp GT>;
            key-positions = <9 8>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        kl {
            bindings = <&kp COLON>;
            key-positions = <21 20>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        dotdot {
            bindings = <&kp COLON>;
            key-positions = <33 32>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        ui {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 7>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        jk {
            bindings = <&kp RU_RIGHT_PARENTHESIS>;
            key-positions = <20 19>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        mcomma-bracket {
            bindings = <&kp RBRC>;
            key-positions = <32 31>;
            timeout-ms = <25>;
            layers = <0 7>;
        };

        yu {
            bindings = <&none>;
            key-positions = <6 7>;
        };

        hj {
            bindings = <&none>;
            key-positions = <19 18>;
        };

        nm {
            bindings = <&none>;
            key-positions = <31 30>;
        };

        ie {
            bindings = <&kp ASTERISK>;
            key-positions = <8 3>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        kd {
            bindings = <&kp DOLLAR>;
            key-positions = <20 15>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        ccomma {
            bindings = <&kp EXCLAMATION>;
            key-positions = <32 27>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        ur {
            bindings = <&kp PLUS>;
            key-positions = <7 4>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        jf {
            bindings = <&kp EQUAL>;
            key-positions = <19 16>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        mv {
            bindings = <&kp MINUS>;
            key-positions = <31 28>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        yt {
            bindings = <&kp AT>;
            key-positions = <6 5>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        hg {
            bindings = <&kp AMPS>;
            key-positions = <18 17>;
            timeout-ms = <35>;
            layers = <0 7>;
        };

        nb {
            bindings = <&kp UNDER>;
            key-positions = <30 29>;
            timeout-ms = <35>;
            layers = <0 7>;
        };
    };

    macros {
        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0 &tog_on 2>;
            label = "BT_MAC";
        };

        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 7 &tog_on 9>;
            label = "BT_WIN";
        };

        mod_mac: mod_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &tog_on 2>;
            label = "MOD_MAC";
        };

        mod_win: mod_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 7 &tog_on 9>;
            label = "MOD_WIN";
        };

        to_en_mac: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(NUMBER_1)) &to 0 &tog_on 2>;
            label = "TO_EN";
        };

        to_ru_mac: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 1 &tog_on 2>;
            label = "LAYER_RU";
        };

        to_en_win: to_en_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(NUMBER_1)) &to 7 &tog_on 9>;
            label = "TO_EN_WIN";
        };

        to_ru_win: to_ru_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 8 &tog_on 9>;
            label = "TO_RU_WIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MacBaseEn {
            display-name = "MacBaseEn";
            bindings = <
&kp TAB    &kp Q                  &kp W              &kp E                  &kp R                &kp T                         &kp Y  &kp U                &kp I                  &kp O              &kp P                          &kp LEFT_BRACKET
&kp ESC    &hrm_l LEFT_CONTROL A  &hrm_l LEFT_ALT S  &hrm_l LEFT_COMMAND D  &hrm_l LEFT_SHIFT F  &kp G                         &kp H  &hrm_r LEFT_SHIFT J  &hrm_r LEFT_COMMAND K  &hrm_r LEFT_ALT L  &hrm_r LEFT_CONTROL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z                  &kp X              &kp C                  &kp V                &kp B                         &kp N  &kp M                &kp COMMA              &kp DOT            &kp FSLH                       &kp RIGHT_BRACKET
                                  &kp GRAVE          &none                  &none                &ltc 3 SPACE  &none    &none  &mo 5  &mo 14               &kp BACKSLASH          &none
            >;
        };

        MacBaseRu {
            display-name = "MacBaseRu";
            bindings = <
&kp TAB     &kp RU_CYRILLIC_SHORT_I             &kp RU_CYRILLIC_TSE               &kp RU_CYRILLIC_U                   &kp RU_CYRILLIC_KA               &kp RU_CYRILLIC_IE                  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE              &kp RU_CYRILLIC_SHA                 &kp RU_CYRILLIC_SHCHA           &kp RU_CYRILLIC_ZE                   &kp RU_CYRILLIC_HA
&kp ESCAPE  &hrm_l LEFT_CONTROL RU_CYRILLIC_EF  &hrm_l LEFT_ALT RU_CYRILLIC_YERU  &hrm_l LEFT_COMMAND RU_CYRILLIC_VE  &hrm_l LEFT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                  &kp RU_CYRILLIC_ER  &hrm_r LEFT_SHIFT RU_CYRILLIC_O  &hrm_r LEFT_COMMAND RU_CYRILLIC_EL  &hrm_r LEFT_ALT RU_CYRILLIC_DE  &hrm_r LEFT_CONTROL RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT   &kp RU_CYRILLIC_YA                  &kp RU_CYRILLIC_CHE               &kp RU_CYRILLIC_ES                  &kp RU_CYRILLIC_EM               &kp RU_CYRILLIC_I                   &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN        &kp RU_CYRILLIC_BE                  &kp RU_CYRILLIC_YU              &mac_ru_dotcomma                     &kp RU_CYRILLIC_HARD_SIGN
                                                &kp RU_BACKSLASH                  &none                               &none                            &ltc 4 SPACE        &none    &none  &mo 5               &mo 14                           &kp RU_CYRILLIC_IO                  &none
            >;
        };

        MacMods {
            display-name = "MacMods";
            bindings = <
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans        &trans  &trans  &trans  &trans  &trans
                &trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans  &kp LEFT_COMMAND    &kp BACKSPACE  &ltc 5 ENTER  &mo 14  &trans  &trans
            >;
        };

        MacNumSymEn {
            bindings = <
&kp LBKT   &kp DOT    &kp N7  &kp N8  &kp N9  &kp RBKT                     &none   &none           &none             &none         &none             &none
&kp SEMI   &kp N0     &kp N4  &kp N5  &kp N6  &kp EQUAL                    &none   &kp LEFT_SHIFT  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &none
&kp GRAVE  &kp MINUS  &kp N1  &kp N2  &kp N3  &kp BSLH                     &none   &none           &none             &none         &none             &none
                      &none   &none   &trans  &trans     &trans    &trans  &mo 13  &trans          &none             &none
            >;

            display-name = "MacNumSymEn";
        };

        MacNumSymRu {
            display-name = "MacNumSymRu";
            bindings = <
&kp LEFT_BRACKET  &kp DOT    &kp N7  &kp N8  &kp N9  &kp RIGHT_BRACKET                    &none   &none           &none             &none         &none             &none
&kp SEMICOLON     &kp N0     &kp N4  &kp N5  &kp N6  &kp EQUAL                            &none   &kp LEFT_SHIFT  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &none
&kp GRAVE         &kp MINUS  &kp N1  &kp N2  &kp N3  &kp BSLH                             &none   &none           &none             &none         &none             &none
                             &none   &none   &trans  &trans             &trans    &trans  &mo 13  &trans          &none             &none
            >;
        };

        MacNavigation {
            bindings = <
&none  &none             &none         &none             &none           &none                     &kp LG(V)       &kp LG(C)       &kp LG(X)     &kp LG(Z)        &kp LG(LS(Z))  &none
&none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &none                     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp CAPSLOCK   &none
&none  &none             &none         &none             &none           &none                     &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT     &none
                         &none         &none             &trans          &mo 13  &trans    &trans  &trans          &trans          &to_en_mac    &to_ru_mac
            >;

            display-name = "MacNavigation";
        };

        MacAjust {
            display-name = "MacAdjust";
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN                    &out OUT_BLE     &out OUT_USB                     &none                            &none                   &none                        &bootloader
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK                     &kp C_PREVIOUS   &hrm_r LEFT_SHIFT C_VOLUME_DOWN  &hrm_r LEFT_COMMAND C_VOLUME_UP  &hrm_r LEFT_ALT C_NEXT  &hrm_r LEFT_CONTROL C_PAUSE  &studio_unlock
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK                    &bt_mac_mod 0 0  &bt_win_mod 0 0                  &bt BT_SEL 2                     &bt BT_SEL 3            &bt BT_SEL 4                 &bt BT_CLR
                &none   &none   &trans  &none            &trans    &trans  &none            &trans                           &none                            &none
            >;
        };

        WinBaseEn {
            display-name = "WinBaseEn";
            bindings = <
&kp TAB    &kp Q                  &kp W              &kp E                  &kp R                &kp T                          &kp Y   &kp U                &kp I                  &kp O              &kp P                          &kp LEFT_BRACKET
&kp ESC    &hrm_l LEFT_COMMAND A  &hrm_l LEFT_ALT S  &hrm_l LEFT_CONTROL D  &hrm_l LEFT_SHIFT F  &kp G                          &kp H   &hrm_r LEFT_SHIFT J  &hrm_r LEFT_CONTROL K  &hrm_r LEFT_ALT L  &hrm_r LEFT_COMMAND SEMICOLON  &kp SQT
&kp LSHFT  &kp Z                  &kp X              &kp C                  &kp V                &kp B                          &kp N   &kp M                &kp COMMA              &kp DOT            &kp FSLH                       &kp RIGHT_BRACKET
                                  &kp GRAVE          &none                  &none                &ltc 10 SPACE  &none    &none  &mo 12  &mo 14               &kp BACKSLASH          &none
            >;
        };

        WinBaseRu {
            display-name = "WinBaseRu";
            bindings = <
&kp TAB     &kp RU_CYRILLIC_SHORT_I             &kp RU_CYRILLIC_TSE               &kp RU_CYRILLIC_U                   &kp RU_CYRILLIC_KA               &kp RU_CYRILLIC_IE                  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE              &kp RU_CYRILLIC_SHA                 &kp RU_CYRILLIC_SHCHA           &kp RU_CYRILLIC_ZE                   &kp RU_CYRILLIC_HA
&kp ESCAPE  &hrm_l LEFT_COMMAND RU_CYRILLIC_EF  &hrm_l LEFT_ALT RU_CYRILLIC_YERU  &hrm_l LEFT_CONTROL RU_CYRILLIC_VE  &hrm_l LEFT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                  &kp RU_CYRILLIC_ER  &hrm_r LEFT_SHIFT RU_CYRILLIC_O  &hrm_r LEFT_CONTROL RU_CYRILLIC_EL  &hrm_r LEFT_ALT RU_CYRILLIC_DE  &hrm_r LEFT_COMMAND RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT   &kp RU_CYRILLIC_YA                  &kp RU_CYRILLIC_CHE               &kp RU_CYRILLIC_ES                  &kp RU_CYRILLIC_EM               &kp RU_CYRILLIC_I                   &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN        &kp RU_CYRILLIC_BE                  &kp RU_CYRILLIC_YU              &kp SLASH                            &kp RU_CYRILLIC_HARD_SIGN
                                                &kp RU_CYRILLIC_IO                &none                               &none                            &ltc 10 SPACE       &none    &none  &mo 12              &mo 14                           &kp RU_BACKSLASH                    &none
            >;
        };

        WinMod {
            display-name = "WinMod";
            bindings = <
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans  &trans  &trans
                &trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &trans  &kp LEFT_CONTROL    &kp BACKSPACE  &ltc 12 ENTER  &mo 14  &trans  &trans
            >;
        };

        WinNumSymEn {
            display-name = "WinNumSymEn";
            bindings = <
&kp LBKT   &kp DOT    &kp N7  &kp N8  &kp N9  &kp RBKT                     &none   &none           &none             &none         &none             &none
&kp SEMI   &kp N0     &kp N4  &kp N5  &kp N6  &kp EQUAL                    &none   &kp LEFT_SHIFT  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &none
&kp GRAVE  &kp MINUS  &kp N1  &kp N2  &kp N3  &kp BSLH                     &none   &none           &none             &none         &none             &none
                      &none   &none   &trans  &trans     &trans    &trans  &mo 13  &trans          &none             &none
            >;
        };

        WinNumSymRu {
            display-name = "WinNumSymRu";
            bindings = <
&kp LBKT   &kp DOT    &kp N7  &kp N8  &kp N9  &kp RBKT                     &none   &none           &none             &none         &none             &none
&kp SEMI   &kp N0     &kp N4  &kp N5  &kp N6  &kp EQUAL                    &none   &kp LEFT_SHIFT  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &none
&kp GRAVE  &kp MINUS  &kp N1  &kp N2  &kp N3  &kp BSLH                     &none   &none           &none             &none         &none             &none
                      &none   &none   &trans  &trans     &trans    &trans  &mo 13  &trans          &none             &none
            >;
        };

        WinNavigation {
            display-name = "WinNavigation";
            bindings = <
&trans  &trans            &trans        &trans            &trans          &trans                    &kp LC(V)       &kp LC(C)       &kp LC(X)     &kp LC(Z)        &kp LC(LS(Z))  &trans
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans                    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp CAPSLOCK   &trans
&trans  &trans            &trans        &trans            &trans          &trans                    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT     &trans
                          &trans        &trans            &trans          &mo 13  &trans    &trans  &trans          &trans          &to_en_win    &to_ru_win
            >;
        };

        WinAdjust {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN                    &out OUT_BLE     &out OUT_USB                     &none                            &none                   &none                        &bootloader
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK                     &kp C_PREVIOUS   &hrm_r LEFT_SHIFT C_VOLUME_DOWN  &hrm_r LEFT_CONTROL C_VOLUME_UP  &hrm_r LEFT_ALT C_NEXT  &hrm_r LEFT_COMMAND C_PAUSE  &studio_unlock
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK                    &bt_mac_mod 0 0  &bt_win_mod 0 0                  &bt BT_SEL 2                     &bt BT_SEL 3            &bt BT_SEL 4                 &bt BT_CLR
                &none   &none   &trans  &none            &trans    &trans  &none            &trans                           &none                            &none
            >;

            display-name = "WinAdjust";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &mo 15  &mo 16
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sniper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <15>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <16>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
