#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
        };

        tog_on: tog_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_ON";
            #binding-cells = <1>;
        };

        tog_off: tog_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };
    };

    combos {
        compatible = "zmk,combos";

        rt-par-open {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
            timeout-ms = <20>;
        };

        yu-par-close {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
            timeout-ms = <20>;
        };

        gf-sq-open {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 16>;
            timeout-ms = <20>;
        };

        hj-sq-close {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
            timeout-ms = <20>;
        };

        bv-curl-open {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <29 28>;
            timeout-ms = <20>;
        };

        nm-curl-close {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
            timeout-ms = <20>;
        };

        er-minus {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
            timeout-ms = <20>;
        };

        ui-underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
            timeout-ms = <20>;
        };

        fd-double-quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 15>;
            timeout-ms = <20>;
        };

        jk-single-quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 20>;
            timeout-ms = <20>;
        };

        we-plus {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
            timeout-ms = <20>;
        };

        io-pipe {
            bindings = <&kp PIPE>;
            key-positions = <8 9>;
            timeout-ms = <20>;
        };

        cv-less {
            bindings = <&kp LESS_THAN>;
            key-positions = <28 27>;
            timeout-ms = <20>;
        };

        mB-great {
            bindings = <&kp GREATER_THAN>;
            key-positions = <31 32>;
            timeout-ms = <20>;
        };

        qa-tilde {
            bindings = <&kp TILDE>;
            key-positions = <1 13>;
            timeout-ms = <20>;
        };

        az-grave {
            bindings = <&kp LS(GRAVE)>;
            key-positions = <25 13>;
            timeout-ms = <20>;
        };
    };

    macros {
        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0 &tog_off 5 &tog_on 2>;
            label = "BT_MAC";
        };

        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 3 &tog_on 5>;
            label = "BT_WIN";
        };

        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog_on 7 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog_on 8 &to_ru>;
            label = "LAYER_RU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BaseEnMac {
            display-name = "BaseEnMac";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R             &kp NUMBER_0                                 &kp Y         &kp U   &kp I      &kp O      &kp P     &kp LEFT_BRACKET
&kp ESC    &kp A  &kp S  &kp D             &kp F             &kp G                                        &kp H         &kp J   &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V             &kp B                                        &kp N         &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RIGHT_BRACKET
                  &none  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &lt 6 SPACE   &kp LEFT_ALT    &kp BACKSPACE  &lt 10 ENTER  &mo 11  &none      &kp ENTER
            >;
        };

        BaseRuMac {
            display-name = "BaseRuMac";
            bindings = <
&kp TAB     &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp NUMBER_1                                       &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp ESCAPE  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                 &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT   &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                                  &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp SLASH            &kp RU_CYRILLIC_HARD_SIGN
                                     &kp RU_CYRILLIC_IO    &kp LEFT_CONTROL    &kp LEFT_COMMAND    &lt 6 SPACE         &kp LEFT_ALT    &kp BACKSPACE  &lt 10 ENTER        &mo 11                     &kp RU_BACKSLASH     &kp ENTER
            >;
        };

        ModMac {
            display-name = "ModMac";
            bindings = <
&trans  &trans             &trans               &trans            &kp NUMBER_2         &kp NUMBER_2                                 &trans        &trans                &trans            &trans                &trans                 &trans
&trans  &hrm LEFT_SHIFT A  &hrm LEFT_CONTROL S  &hrm LEFT_ALT D   &hrm LEFT_COMMAND F  &trans                                       &trans        &hrm RIGHT_COMMAND J  &hrm RIGHT_ALT K  &hrm RIGHT_CONTROL L  &hrm RIGHT_SHIFT SEMI  &trans
&trans  &trans             &trans               &trans            &trans               &trans                                       &trans        &trans                &trans            &trans                &trans                 &trans
                           &trans               &kp LEFT_CONTROL  &kp LEFT_COMMAND     &lt 6 SPACE   &kp LEFT_ALT    &kp BACKSPACE  &lt 10 ENTER  &mo 11                &trans            &kp ENTER
            >;
        };

        BaseEnWin {
            display-name = "BaseEnWin";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R             &kp NUMBER_3                                 &kp Y         &kp U   &kp I      &kp O      &kp P     &kp LEFT_BRACKET
&kp ESC    &kp A  &kp S  &kp D             &kp F             &kp G                                        &kp H         &kp J   &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V             &kp B                                        &kp N         &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RIGHT_BRACKET
                  &none  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &lt 6 SPACE   &kp LEFT_ALT    &kp BACKSPACE  &lt 10 ENTER  &mo 11  &none      &kp ENTER
            >;
        };

        BaseRuWin {
            display-name = "BaseRuWin";
            bindings = <
&kp TAB     &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp NUMBER_4                                       &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp ESCAPE  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                 &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT   &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                                  &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp SLASH            &kp RU_CYRILLIC_HARD_SIGN
                                     &kp RU_CYRILLIC_IO    &kp LEFT_COMMAND    &kp LEFT_CONTROL    &lt 6 SPACE         &kp LEFT_ALT    &kp BACKSPACE  &lt 10 ENTER        &mo 11                     &kp RU_BACKSLASH     &kp ENTER
            >;
        };

        ModWin {
            display-name = "ModWin";
            bindings = <
&trans  &trans             &trans               &trans            &kp NUMBER_5         &kp NUMBER_5                                 &trans        &trans                &trans            &trans                &trans                 &trans
&trans  &hrm LEFT_SHIFT A  &hrm LEFT_CONTROL S  &hrm LEFT_ALT D   &hrm LEFT_COMMAND F  &trans                                       &trans        &hrm RIGHT_COMMAND J  &hrm RIGHT_ALT K  &hrm RIGHT_CONTROL L  &hrm RIGHT_SHIFT SEMI  &trans
&trans  &trans             &trans               &trans            &trans               &trans                                       &trans        &trans                &trans            &trans                &trans                 &trans
                           &trans               &kp LEFT_COMMAND  &kp LEFT_CONTROL     &lt 9 SPACE   &kp LEFT_ALT    &kp BACKSPACE  &lt 10 ENTER  &mo 11                &trans            &kp ENTER
            >;
        };

        NumSym {
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp NUMBER_6                       &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                        &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &layer_en   &layer_ru                          &trans     &trans         &kp QUESTION  &kp RU_QUESTION       &kp GRAVE              &trans
                         &trans       &trans    &trans      &trans        &kp LCTRL    &trans  &mo 10     &trans         &trans        &trans
            >;

            display-name = "NumSym";
        };

        EnTurnOn {
            bindings = <
&trans  &trans  &trans  &trans  &kp NUMBER_7  &kp NUMBER_7                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        RuTurnOn {
            bindings = <
&trans  &trans  &trans  &trans  &kp NUMBER_8  &kp NUMBER_8                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Navigation {
            bindings = <
&trans  &trans    &kp LT    &kp EQUAL  &kp GT    &kp NUMBER_9                    &kp CARET  &kp DQT   &kp UNDER  &kp SQT   &trans    &trans
&trans  &kp BSLH  &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                        &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC  &kp EXCL  &kp QUESTION
&trans  &trans    &kp STAR  &kp COLON  &kp FSLH  &kp DLLR                        &kp AT     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                  &trans    &trans     &trans    &mo 10        &trans    &trans  &trans     &trans    &trans     &trans
            >;

            display-name = "Navigation";
        };

        Adjust {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp G                    &bt_mac       &bt_win       &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "Adjust";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &kp H                     &trans  &trans    &trans    &trans    &trans  &trans
&mo 13  &mo 12  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &mo 12  &mo 13
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mac-en {
            if-layers = <7 2>;
            then-layer = <0>;
        };

        mac-ru {
            if-layers = <8 2>;
            then-layer = <1>;
        };

        win-en {
            if-layers = <7 5>;
            then-layer = <3>;
        };

        win-ru {
            if-layers = <8 5>;
            then-layer = <4>;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <6>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <7>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
