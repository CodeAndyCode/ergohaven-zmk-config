#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        rt-left-par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
            slow-release;
            timeout-ms = <50>;
            require-prior-idle-ms = <35>;
        };

        er-min {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
        };

        we-plus {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
        };

        gf-sq-open {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 16>;
        };

        bv-curl-open {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <29 28>;
        };

        fd-double-q {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 15>;
        };

        qa-tilde {
            bindings = <&kp TILDE>;
            key-positions = <1 13>;
        };

        grave {
            bindings = <&kp LS(GRAVE)>;
            key-positions = <25 13>;
        };

        yu-close-per {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        hj-sq-close {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        nm-close-curl {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        ui-underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
        };

        io-pipe {
            bindings = <&kp PIPE>;
            key-positions = <8 9>;
        };

        jk-quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 20>;
        };

        cv-less {
            bindings = <&kp LESS_THAN>;
            key-positions = <28 27>;
        };

        mB-great {
            bindings = <&kp GREATER_THAN>;
            key-positions = <31 32>;
        };
    };

    macros {
        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &bt BT_SEL 0>;
            label = "BT_MAC";
        };

        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &bt BT_SEL 1>;
            label = "BT_WIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MacBase {
            display-name = "MacBase";
            bindings = <
&kp TAB    &kp Q              &kp W                &kp E             &kp R                &kp T                                       &kp Y        &kp U                 &kp I             &kp O                 &kp P                  &kp LEFT_BRACKET
&kp ESC    &hrm LEFT_SHIFT A  &hrm LEFT_CONTROL S  &hrm LEFT_ALT D   &hrm LEFT_COMMAND F  &kp G                                       &kp H        &hrm RIGHT_COMMAND J  &hrm RIGHT_ALT K  &hrm RIGHT_CONTROL L  &hrm RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &kp Z              &kp X                &kp C             &kp V                &kp B                                       &kp N        &kp M                 &kp COMMA         &kp DOT               &kp FSLH               &kp RIGHT_BRACKET
                              &trans               &kp LEFT_CONTROL  &kp LEFT_COMMAND     &lt 2 SPACE  &kp LEFT_ALT    &kp BACKSPACE  &lt 3 ENTER  &mo 5                 &kp BACKSLASH     &kp ENTER
            >;
        };

        WinBase {
            display-name = "WinBase";
            bindings = <
&kp TAB    &kp Q              &kp W                &kp E              &kp R                &kp T                                       &kp Y        &kp U                 &kp I             &kp O                 &kp P                  &kp LEFT_BRACKET
&kp ESC    &hrm LEFT_SHIFT A  &hrm LEFT_COMMAND S  &hrm LEFT_ALT D    &hrm LEFT_CONTROL F  &kp G                                       &kp H        &hrm RIGHT_CONTROL J  &hrm RIGHT_ALT K  &hrm RIGHT_COMMAND L  &hrm RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &kp Z              &kp X                &kp C              &kp V                &kp B                                       &kp N        &kp M                 &kp COMMA         &kp DOT               &kp FSLH               &kp RIGHT_BRACKET
                              &trans               &kp RIGHT_COMMAND  &kp LEFT_CONTROL     &lt 2 SPACE  &kp LEFT_ALT    &kp BACKSPACE  &lt 3 ENTER  &mo 5                 &kp BACKSLASH     &kp ENTER
            >;
        };

        NumSym {
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4                &kp N5                                     &kp N6     &kp N7         &kp N8           &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR            &kp PERCENT                                &kp CARET  &kp AMPERSAND  &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &kp LS(LC(NUMBER_1))  &kp LS(LC(NUMBER_2))                       &trans     &trans         &mt F14 U_002C   &mt F13 U_002E        &mt F15 U_003F         &trans
                         &trans       &trans    &trans                &trans                &kp LCTRL    &trans  &mo 4      &trans         &trans           &trans
            >;

            display-name = "NumSym";
        };

        Nav {
            bindings = <
&trans  &trans    &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                    &kp CARET  &kp DQT   &kp UNDER  &kp SQT   &trans    &trans
&trans  &kp BSLH  &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                     &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC  &kp EXCL  &kp QUESTION
&trans  &trans    &kp STAR  &kp COLON  &kp FSLH  &kp DLLR                     &kp AT     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                  &trans    &trans     &trans    &mo 4      &trans    &trans  &trans     &trans    &trans     &trans
            >;

            display-name = "Nav";
        };

        Adjust {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "Adjust";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&mo 7   &mo 6   &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &mo 6   &mo 7
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <5>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <6>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
