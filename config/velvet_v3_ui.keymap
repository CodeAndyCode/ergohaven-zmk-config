#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <10>;
            hold-while-undecided;
        };

        ltc: ltc {
            compatible = "zmk,behavior-hold-tap";
            label = "LTC";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
        };

        tog_on: tog_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_ON";
            #binding-cells = <1>;
        };

        tog_off: tog_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        bt_mac_mod: bt_mac_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "BT_MAC_MOD";
            bindings = <&mod_mac>, <&bt_mac>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        bt_win_mod: bt_win_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "BT_WIN_MOD";
            bindings = <&mod_win>, <&bt_win>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mac_ru_dotcomma: mac_ru_dotcomma {
            compatible = "zmk,behavior-mod-morph";
            label = "MAC_RU_DOTCOMMA";
            bindings = <&kp LS(NUMBER_7)>, <&kp LS(NUMBER_6)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 41>;
        };

        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 2 3 5 4 17 16 15 14 13 25 26 27 28 29 36 0 12 24 37 40 39 38 13 14 15 16 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to-en-mac {
            bindings = <&to_en_mac>;
            key-positions = <39 28>;
            layers = <0 1 2 3>;
        };

        to-ru-mac {
            bindings = <&to_ru_mac>;
            key-positions = <39 29>;
            layers = <0 1 2 3>;
        };

        to-en-win {
            bindings = <&to_en_win>;
            key-positions = <39 28>;
            layers = <5 6 10 8>;
        };

        to-ru-win {
            bindings = <&to_ru_win>;
            key-positions = <39 29>;
            layers = <0 1 2 3>;
        };

        rt-par-open {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
            timeout-ms = <25>;
        };

        yu-par-close {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
            timeout-ms = <25>;
        };

        gf-sq-open {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 16>;
            timeout-ms = <25>;
        };

        hj-sq-close {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
            timeout-ms = <25>;
        };

        bv-curl-open {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <29 28>;
            timeout-ms = <25>;
        };

        nm-curl-close {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
            timeout-ms = <25>;
        };

        er-minus {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
            timeout-ms = <25>;
        };

        ui-underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
            timeout-ms = <25>;
        };

        fd-double-quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 15>;
            timeout-ms = <25>;
        };

        jk-single-quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 20>;
            timeout-ms = <25>;
        };

        we-plus {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
            timeout-ms = <25>;
        };

        io-pipe {
            bindings = <&kp PIPE>;
            key-positions = <8 9>;
            timeout-ms = <25>;
        };

        cv-less {
            bindings = <&kp LESS_THAN>;
            key-positions = <28 27>;
            timeout-ms = <25>;
        };

        mB-great {
            bindings = <&kp GREATER_THAN>;
            key-positions = <31 32>;
            timeout-ms = <25>;
        };

        qa-tilde {
            bindings = <&kp TILDE>;
            key-positions = <1 13>;
            timeout-ms = <25>;
        };

        az-grave {
            bindings = <&kp LS(GRAVE)>;
            key-positions = <25 13>;
            timeout-ms = <25>;
        };

        bn-equals {
            bindings = <&kp EQUAL>;
            key-positions = <29 30>;
            timeout-ms = <25>;
        };
    };

    macros {
        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0 &tog_on 2>;
            label = "BT_MAC";
        };

        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 5 &tog_on 7>;
            label = "BT_WIN";
        };

        mod_mac: mod_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &tog_on 2>;
            label = "MOD_MAC";
        };

        mod_win: mod_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 5 &tog_on 7>;
            label = "MOD_WIN";
        };

        to_en_mac: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(NUMBER_1)) &to 0 &tog_on 2>;
            label = "TO_EN";
        };

        to_ru_mac: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 1 &tog_on 2>;
            label = "LAYER_RU";
        };

        to_en_win: to_en_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(NUMBER_1)) &to 5 &tog_on 7>;
            label = "TO_EN_WIN";
        };

        to_ru_win: to_ru_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 6 &tog_on 7>;
            label = "TO_RU_WIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BaseEnMac {
            display-name = "BaseEnMac";
            bindings = <
&kp TAB    &kp Q                  &kp W              &kp E                  &kp R                &kp T                         &kp Y   &kp U                &kp I                  &kp O              &kp P                          &kp LEFT_BRACKET
&kp ESC    &hrm_l LEFT_CONTROL A  &hrm_l LEFT_ALT S  &hrm_l LEFT_COMMAND D  &hrm_l LEFT_SHIFT F  &kp G                         &kp H   &hrm_l LEFT_SHIFT J  &hrm_r LEFT_COMMAND K  &hrm_r LEFT_ALT L  &hrm_r LEFT_CONTROL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z                  &kp X              &kp C                  &kp V                &kp B                         &kp N   &kp M                &kp COMMA              &kp DOT            &kp FSLH                       &kp RIGHT_BRACKET
                                  &kp GRAVE          &none                  &none                &ltc 3 SPACE  &none    &none  &mo 10  &mo 12               &kp BACKSLASH          &none
            >;
        };

        BaseRuMac {
            display-name = "BaseRuMac";
            bindings = <
&kp TAB     &kp RU_CYRILLIC_SHORT_I             &kp RU_CYRILLIC_TSE               &kp RU_CYRILLIC_U                   &kp RU_CYRILLIC_KA               &kp RU_CYRILLIC_IE                  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE              &kp RU_CYRILLIC_SHA                 &kp RU_CYRILLIC_SHCHA           &kp RU_CYRILLIC_ZE                   &kp RU_CYRILLIC_HA
&kp ESCAPE  &hrm_l LEFT_CONTROL RU_CYRILLIC_EF  &hrm_l LEFT_ALT RU_CYRILLIC_YERU  &hrm_l LEFT_COMMAND RU_CYRILLIC_VE  &hrm_l LEFT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                  &kp RU_CYRILLIC_ER  &hrm_r LEFT_SHIFT RU_CYRILLIC_O  &hrm_r LEFT_COMMAND RU_CYRILLIC_EL  &hrm_r LEFT_ALT RU_CYRILLIC_DE  &hrm_r LEFT_CONTROL RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT   &kp RU_CYRILLIC_YA                  &kp RU_CYRILLIC_CHE               &kp RU_CYRILLIC_ES                  &kp RU_CYRILLIC_EM               &kp RU_CYRILLIC_I                   &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN        &kp RU_CYRILLIC_BE                  &kp RU_CYRILLIC_YU              &mac_ru_dotcomma                     &kp RU_CYRILLIC_HARD_SIGN
                                                &kp RU_BACKSLASH                  &none                               &none                            &ltc 4 SPACE        &none    &none  &mo 10              &mo 12                           &kp RU_CYRILLIC_IO                  &none
            >;
        };

        ModsMac {
            display-name = "ModsMac";
            bindings = <
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans     &trans  &trans
                &trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans  &kp LEFT_COMMAND    &kp BACKSPACE  &ltc 10 ENTER  &mo 12  &trans  &kp ENTER
            >;
        };

        NumSymEnMac {
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp NUMBER_5                    &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &to_en_mac  &to_ru_mac                      &trans     &trans         &kp COMMA     &kp DOT               &kp QUESTION           &trans
                         &trans       &trans    &trans      &trans        &trans    &trans  &mo 11     &trans         &trans        &trans
            >;

            display-name = "NumSymEnMac";
        };

        NumSymRuMac {
            display-name = "NumSymRuMac";
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp NUMBER_5                    &kp N6     &kp N7         &kp N8            &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                     &kp CARET  &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &to_en_mac  &to_ru_mac                      &trans     &trans         &kp LS(NUMBER_6)  &kp LS(NUMBER_7)      &kp QUESTION           &trans
                         &trans       &trans    &trans      &trans        &trans    &trans  &mo 11     &trans         &trans            &trans
            >;
        };

        BaseEnWin {
            display-name = "BaseEnWin";
            bindings = <
&kp TAB    &kp Q                  &kp W              &kp E                  &kp R                &kp T                         &kp Y   &kp U                &kp I                  &kp O              &kp P                          &kp LEFT_BRACKET
&kp ESC    &hrm_l LEFT_COMMAND A  &hrm_l LEFT_ALT S  &hrm_l LEFT_CONTROL D  &hrm_l LEFT_SHIFT F  &kp G                         &kp H   &hrm_r LEFT_SHIFT J  &hrm_r LEFT_CONTROL K  &hrm_r LEFT_ALT L  &hrm_r LEFT_COMMAND SEMICOLON  &kp SQT
&kp LSHFT  &kp Z                  &kp X              &kp C                  &kp V                &kp B                         &kp N   &kp M                &kp COMMA              &kp DOT            &kp FSLH                       &kp RIGHT_BRACKET
                                  &kp GRAVE          &none                  &none                &ltc 8 SPACE  &none    &none  &mo 10  &mo 12               &kp BACKSLASH          &none
            >;
        };

        BaseRuWin {
            display-name = "BaseRuWin";
            bindings = <
&kp TAB     &kp RU_CYRILLIC_SHORT_I             &kp RU_CYRILLIC_TSE               &kp RU_CYRILLIC_U                   &kp RU_CYRILLIC_KA               &kp RU_CYRILLIC_IE                  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE              &kp RU_CYRILLIC_SHA                 &kp RU_CYRILLIC_SHCHA           &kp RU_CYRILLIC_ZE                   &kp RU_CYRILLIC_HA
&kp ESCAPE  &hrm_l LEFT_COMMAND RU_CYRILLIC_EF  &hrm_l LEFT_ALT RU_CYRILLIC_YERU  &hrm_l LEFT_CONTROL RU_CYRILLIC_VE  &hrm_l LEFT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                  &kp RU_CYRILLIC_ER  &hrm_r LEFT_SHIFT RU_CYRILLIC_O  &hrm_r LEFT_CONTROL RU_CYRILLIC_EL  &hrm_r LEFT_ALT RU_CYRILLIC_DE  &hrm_r LEFT_COMMAND RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT   &kp RU_CYRILLIC_YA                  &kp RU_CYRILLIC_CHE               &kp RU_CYRILLIC_ES                  &kp RU_CYRILLIC_EM               &kp RU_CYRILLIC_I                   &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN        &kp RU_CYRILLIC_BE                  &kp RU_CYRILLIC_YU              &kp SLASH                            &kp RU_CYRILLIC_HARD_SIGN
                                                &kp RU_CYRILLIC_IO                &none                               &none                            &ltc 9 SPACE        &none    &none  &mo 10              &mo 12                           &kp RU_BACKSLASH                    &none
            >;
        };

        ModWin {
            display-name = "ModWin";
            bindings = <
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                                     &trans         &trans  &trans  &trans     &trans  &trans
                &trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &trans  &kp LEFT_CONTROL    &kp BACKSPACE  &ltc 10 ENTER  &mo 12  &trans  &kp ENTER
            >;
        };

        NumSymEnWin {
            display-name = "NumSymEnWin";
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp NUMBER_5                    &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &to_en_win  &to_ru_win                      &trans     &trans         &kp COMMA     &kp DOT               &kp QUESTION           &trans
                         &trans       &trans    &trans      &trans        &trans    &trans  &mo 11     &trans         &trans        &trans
            >;
        };

        NumSymRuWin {
            display-name = "NumSymRuWin";
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp NUMBER_5                    &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans    &to_en_win  &to_ru_win                      &trans     &trans         &kp RU_COMMA  &kp RU_DOT            &kp RU_QUESTION        &trans
                         &trans       &trans    &trans      &trans        &trans    &trans  &mo 11     &trans         &trans        &trans
            >;
        };

        Navigation {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                     &kp DELETE          &kp END         &kp HOME      &kp INSERT           &trans  &trans
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10                    &kp LEFT_ARROW      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW      &trans  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15                    &kp LC(LEFT_ARROW)  &kp PAGE_DOWN   &kp PAGE_UP   &kp LC(RIGHT_ARROW)  &trans  &trans
                 &trans   &trans   &trans   &mo 11   &trans    &trans  &trans              &trans          &trans        &trans
            >;

            display-name = "Navigation";
        };

        Adjust {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt_mac_mod 0 0  &bt_win_mod 0 0  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE     &kp C_VOL_DN     &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB     &kp K_PREV       &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none            &none            &none             &none
            >;

            display-name = "Adjust";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &mo 13  &mo 14
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <13>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <14>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
